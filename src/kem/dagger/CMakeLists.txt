# SPDX-License-Identifier: MIT

# This file was generated by
# scripts/copy_from_upstream/copy_from_upstream.py

set(_DAGGER_OBJS "")

if(OQS_ENABLE_KEM_dagger_lightdagger)
    add_library(dagger_lightdagger_clean OBJECT kem_dagger_lightdagger.c pqclean_lightdagger_clean/cbd.c pqclean_lightdagger_clean/kem.c pqclean_lightdagger_clean/pack_unpack.c pqclean_lightdagger_clean/poly.c pqclean_lightdagger_clean/poly_mul.c pqclean_lightdagger_clean/DAGGER_indcpa.c pqclean_lightdagger_clean/verify.c)
    target_include_directories(dagger_lightdagger_clean PRIVATE ${CMAKE_CURRENT_LIST_DIR}/pqclean_lightdagger_clean)
    target_include_directories(dagger_lightdagger_clean PRIVATE ${PROJECT_SOURCE_DIR}/src/common/pqclean_shims)
    set(_DAGGER_OBJS ${_DAGGER_OBJS} $<TARGET_OBJECTS:dagger_lightdagger_clean>)
endif()

if(OQS_ENABLE_KEM_dagger_lightdagger_avx2)
    add_library(dagger_lightdagger_avx2 OBJECT pqclean_lightdagger_avx2/cbd.c pqclean_lightdagger_avx2/kem.c pqclean_lightdagger_avx2/pack_unpack.c pqclean_lightdagger_avx2/poly.c pqclean_lightdagger_avx2/poly_mul.c pqclean_lightdagger_avx2/DAGGER_indcpa.c pqclean_lightdagger_avx2/verify.c)
    target_include_directories(dagger_lightdagger_avx2 PRIVATE ${CMAKE_CURRENT_LIST_DIR}/pqclean_lightdagger_avx2)
    target_include_directories(dagger_lightdagger_avx2 PRIVATE ${PROJECT_SOURCE_DIR}/src/common/pqclean_shims)
    target_compile_options(dagger_lightdagger_avx2 PRIVATE -mavx2)
    set(_DAGGER_OBJS ${_DAGGER_OBJS} $<TARGET_OBJECTS:dagger_lightdagger_avx2>)
endif()

if(OQS_ENABLE_KEM_dagger_dagger)
    add_library(dagger_dagger_clean OBJECT kem_dagger_dagger.c pqclean_dagger_clean/cbd.c pqclean_dagger_clean/kem.c pqclean_dagger_clean/pack_unpack.c pqclean_dagger_clean/poly.c pqclean_dagger_clean/poly_mul.c pqclean_dagger_clean/DAGGER_indcpa.c pqclean_dagger_clean/verify.c)
    target_include_directories(dagger_dagger_clean PRIVATE ${CMAKE_CURRENT_LIST_DIR}/pqclean_dagger_clean)
    target_include_directories(dagger_dagger_clean PRIVATE ${PROJECT_SOURCE_DIR}/src/common/pqclean_shims)
    set(_DAGGER_OBJS ${_DAGGER_OBJS} $<TARGET_OBJECTS:dagger_dagger_clean>)
endif()

if(OQS_ENABLE_KEM_dagger_dagger_avx2)
    add_library(dagger_dagger_avx2 OBJECT pqclean_dagger_avx2/cbd.c pqclean_dagger_avx2/kem.c pqclean_dagger_avx2/pack_unpack.c pqclean_dagger_avx2/poly.c pqclean_dagger_avx2/poly_mul.c pqclean_dagger_avx2/DAGGER_indcpa.c pqclean_dagger_avx2/verify.c)
    target_include_directories(dagger_dagger_avx2 PRIVATE ${CMAKE_CURRENT_LIST_DIR}/pqclean_dagger_avx2)
    target_include_directories(dagger_dagger_avx2 PRIVATE ${PROJECT_SOURCE_DIR}/src/common/pqclean_shims)
    target_compile_options(dagger_dagger_avx2 PRIVATE -mavx2)
    set(_DAGGER_OBJS ${_DAGGER_OBJS} $<TARGET_OBJECTS:dagger_dagger_avx2>)
endif()

if(OQS_ENABLE_KEM_dagger_firedagger)
    add_library(dagger_firedagger_clean OBJECT kem_dagger_firedagger.c pqclean_firedagger_clean/cbd.c pqclean_firedagger_clean/kem.c pqclean_firedagger_clean/pack_unpack.c pqclean_firedagger_clean/poly.c pqclean_firedagger_clean/poly_mul.c pqclean_firedagger_clean/DAGGER_indcpa.c pqclean_firedagger_clean/verify.c)
    target_include_directories(dagger_firedagger_clean PRIVATE ${CMAKE_CURRENT_LIST_DIR}/pqclean_firedagger_clean)
    target_include_directories(dagger_firedagger_clean PRIVATE ${PROJECT_SOURCE_DIR}/src/common/pqclean_shims)
    set(_DAGGER_OBJS ${_DAGGER_OBJS} $<TARGET_OBJECTS:dagger_firedagger_clean>)
endif()

if(OQS_ENABLE_KEM_dagger_firedagger_avx2)
    add_library(dagger_firedagger_avx2 OBJECT pqclean_firedagger_avx2/cbd.c pqclean_firedagger_avx2/kem.c pqclean_firedagger_avx2/pack_unpack.c pqclean_firedagger_avx2/poly.c pqclean_firedagger_avx2/poly_mul.c pqclean_firedagger_avx2/DAGGER_indcpa.c pqclean_firedagger_avx2/verify.c)
    target_include_directories(dagger_firedagger_avx2 PRIVATE ${CMAKE_CURRENT_LIST_DIR}/pqclean_firedagger_avx2)
    target_include_directories(dagger_firedagger_avx2 PRIVATE ${PROJECT_SOURCE_DIR}/src/common/pqclean_shims)
    target_compile_options(dagger_firedagger_avx2 PRIVATE -mavx2)
    set(_DAGGER_OBJS ${_DAGGER_OBJS} $<TARGET_OBJECTS:dagger_firedagger_avx2>)
endif()

set(DAGGER_OBJS ${_DAGGER_OBJS} PARENT_SCOPE)
